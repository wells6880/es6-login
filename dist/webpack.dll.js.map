{"version":3,"sources":["../webpack.dll.js"],"names":["webpack","require","path","vendors","options","output","join","__dirname","filename","library","entry","vendor","plugins","DllPlugin","name","context","optimize","UglifyJsPlugin","err","stats","process","stdout","write","toString","colors","cached","modules","children","chunks","chunkModules","hasErrors","console","log","exit"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,IAAME,UAAU,CACZ,UADY,EAEZ,gBAFY,EAGZ,WAHY,EAIZ,kBAJY,EAKZ,gBALY,CAAhB;;AAQA,IAAMC,UAAU;AACdC,YAAQ;AACNH,cAAMA,KAAKI,IAAL,CAAUC,SAAV,EAAqB,SAArB,CADA;AAENC,kBAAU,YAFJ;AAGNC,iBAAS;AAHH,KADM;AAMdC,WAAO;AACLC,gBAAQR;AADH,KANO;AASdS,aAAS,CACP,IAAIZ,QAAQa,SAAZ,CAAsB;AACpBX,cAAM,eADc;AAEpBY,cAAM,SAFc;AAGpBC,iBAASR;AAHW,KAAtB,CADO,EAMP,IAAIP,QAAQgB,QAAR,CAAiBC,cAArB,EANO;;AAUX;AAnBgB,CAAhB,CAoBAjB,QAAQI,OAAR,EAAiB,UAAUc,GAAV,EAAeC,KAAf,EAAsB;AACnC;AACA,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,YAAQC,MAAR,CAAeC,KAAf,CAAqBH,MAAMI,QAAN,CAAe;AAChC;AACAC,gBAAQ,IAFwB;AAGhCC,gBAAQ,KAHwB;AAIhCC,iBAAS,IAJuB;AAKhCC,kBAAU,KALsB;AAMhCC,gBAAQ,KANwB;AAOhCC,sBAAc;AAPkB,KAAf,IAQhB,MARL;;AAUA,QAAIV,MAAMW,SAAN,EAAJ,EAAuB;AACnBC,gBAAQC,GAAR,CAAY,+BAAZ;AACAZ,gBAAQa,IAAR,CAAa,CAAb;AACH;;AAEDF,YAAQC,GAAR,CAAY,qBAAZ;AACAD,YAAQC,GAAR,CACI,qEACA,kDAFJ;AAIH,CAvBD","file":"webpack.dll.js","sourcesContent":["const webpack = require('webpack');\nconst path = require('path');\n\nconst vendors = [\n    'es6-shim',\n    'fetch-detector',\n    'fetch-ie8',\n    'es6-promise/auto',\n    'babel-polyfill'\n];\n\nconst options = {\n  output: {\n    path: path.join(__dirname, 'src/lib'),\n    filename: 'vendors.js',\n    library: 'vendors',\n  },\n  entry: {\n    vendor: vendors,\n  },\n  plugins: [\n    new webpack.DllPlugin({\n      path: 'manifest.json',\n      name: 'vendors',\n      context: __dirname,\n    }),\n    new webpack.optimize.UglifyJsPlugin()\n  ],\n}\n\n// webpack(webpackConf).run(function(err, stats) {\nwebpack(options, function (err, stats) {\n    // spinner.stop()\n    if (err) throw err\n    process.stdout.write(stats.toString({\n        // context: path.join(__dirname, '../lib'),\n        colors: true,\n        cached: false,\n        modules: true,\n        children: false,\n        chunks: false,\n        chunkModules: false\n    }) + '\\n\\n')\n\n    if (stats.hasErrors()) {\n        console.log('  Build failed with errors.\\n')\n        process.exit(1)\n    }\n\n    console.log('  Build complete.\\n')\n    console.log(\n        '  Tip: built files are meant to be served over an HTTP server.\\n' +\n        '  Opening index.html over file:// won\\'t work.\\n'\n    );\n});\n\n"]}